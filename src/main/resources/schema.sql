IF NOT EXISTS users
CREATE TABLE users (
  user_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  email varchar(50),
  login varchar(25) NOT NULL,
  name varchar(25),
  birthday timestamp
);

IF NOT EXISTS films
CREATE TABLE films (
  film_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name nvarchar(50),
  description varchar(200),
  release_date timestamp,
  duration integer,
  rate integer,
  raiting varchar(5)
);

IF NOT EXISTS friends
CREATE TABLE friends (
  id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  user_id integer NOT NULL,
  friend_id integer NOT NULL,
  status varchar,
  status_start timestamp,
  status_end timestamp
);

IF NOT EXISTS filmGenres
CREATE TABLE filmGenres (
  id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  film_id integer NOT NULL,
  genre_id integer NOT NULL,
  status varchar,
  status_start timestamp,
  status_end timestamp
);

IF NOT EXISTS genres
CREATE TABLE genres (
  genre_id integer NOT NULL PRIMARY KEY,
  genre_name varchar(8)
);

IF NOT EXISTS likes
CREATE TABLE likes (
  id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  film_id integer NOT NULL,
  user_id integer NOT NULL,
  status varchar,
  status_start timestamp,
  status_end timestamp
);

ALTER TABLE friends ADD FOREIGN KEY (user_id) REFERENCES users (user_id);

ALTER TABLE likes ADD FOREIGN KEY (film_id) REFERENCES films (film_id);

ALTER TABLE filmGenres ADD FOREIGN KEY (film_id) REFERENCES films (film_id);

ALTER TABLE genres ADD FOREIGN KEY (genre_id) REFERENCES filmGenres (genre_id);

ALTER TABLE likes ADD FOREIGN KEY (user_id) REFERENCES users (user_id);